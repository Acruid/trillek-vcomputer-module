1	00000000	begin			
2	00000000		MOV	%r0, 1	20008080
3	00000004		MOV	%r1, 1	21008080
4	00000008		MOV	%r2, 2 	42008080
5	0000000c		MOV	%r3, 3 	63008080
6	00000010		MOV	%r4, 4 	84008080
7	00000014		MOV	%r5, 5 	A5008080
8	00000018		MOV	%r6, 6 	C6008080
9	0000001c		MOV	%r7, 7 	E7008080
10	00000020		MOV	%r8, 8 	08018080
11	00000024		MOV	%r9, 9 	29018080
12	00000028		MOV	%r10, 10 	4A018080
13	0000002c		MOV	%r11, 11 	6B018080
14	00000030		MOV	%bp, 0        	0C008080
15	00000034		MOV	%sp, 0x30000    	0D00C08000000300
16	0000003c		MOV	%ia, vtable                 	8E00A080
17	00000040		MOV	%flags, 0x100    	0F208080
18	00000044		MOV	%r1, 0xBEBECAFE   	0100C080FECABEBE
21	0000004c		MOV	%r10 , %r1      	2A000080
22	00000050		SWP	%r7, %r9        	27010081
23	00000054		NOT	%r0, %r0        	00000084
24	00000058		XCHGB	%r4           	04000020
25	0000005c		XCHGW	%r5           	05000021
28	00000060	test_ifx			
29	00000060		IFEQ	%r1, 0         	010080A0
30	00000064		JMP	crash	D0028038
31	00000068		IFNEQ	%r1, 0xBEBECAFE 	0100C0A1FECABEBE
32	00000070		JMP	crash	D0028038
34	00000074		IFL	%r6, %r2        	460000A2
35	00000078		JMP	crash	D0028038
36	0000007c		IFLE	%r6, %r2       	460000A4
37	00000080		JMP	crash	D0028038
39	00000084		IFSL	%r2, %r0       	020000A3
40	00000088		JMP	crash	D0028038
41	0000008c		IFSLE	%r2, %r0      	020000A5
42	00000090		JMP	crash	D0028038
44	00000094		IFBITS	%r4, 0x404   	848080A6
45	00000098		JMP	next	A0008038
46	0000009c		JMP	crash	D0028038
48	000000a0	next			
49	000000a0		IFCLEAR	%r4, 0x404  	848080A7
50	000000a4		JMP	crash	D0028038
52	000000a8		IFEQ	%r1, 0         	010080A0
53	000000ac		IFNEQ	%r1, 0              	010080A1
54	000000b0		IFEQ	%r1, 0xBEBACAFE  	0100C0A0FECABABE
55	000000b8		JMP	crash         	D0028038
58	000000bc	test_alu			
60	000000bc		MOV	%r7, 0x5555AAAA	0700C080AAAA5555
61	000000c4		MOV	%r6, 0xAAFFFF55	0600C08055FFFFAA
62	000000cc		NOT	%r11, %r6           	CB000084
63	000000d0		IFNEQ	%r11, 0x550000AA	0B00C0A1AA000055
64	000000d8		JMP	crash	D0028038
66	000000dc		AND	%r11, %r7, %r6      	EB180040
67	000000e0		IFNEQ	%r11, 0x0055AA00	0B00C0A100AA5500
68	000000e8		JMP	crash	D0028038
70	000000ec		OR	%r11, %r7, %r6       	EB180041
71	000000f0		IFNEQ	%r11, 0xFFFFFFFF	0B00C0A1FFFFFFFF
72	000000f8		JMP	crash	D0028038
74	000000fc		XOR	%r11, %r7, %r6      	EB180042
75	00000100		IFNEQ	%r11, 0xFFAA55FF	0B00C0A1FF55AAFF
76	00000108		JMP	crash	D0028038
78	0000010c		BITC	%r11, %r7, %r6     	EB180043
79	00000110		IFNEQ	%r11, 0x550000AA	0B00C0A1AA000055
80	00000118		JMP	crash	D0028038
83	0000011c		ADD	%r11, %r8, %r4      	0B110044
84	00000120		IFNEQ	%r11, 0x408	0B8180A1
85	00000124		JMP	crash	D0028038
87	00000128		ADD	%r0, %r8, 1         	00058044
88	0000012c		IFNEQ	%r0, 9	200180A1
89	00000130		JMP	crash	D0028038
91	00000134		SUB	%r10, %r11, %r0     	6A010046
92	00000138		IFNEQ	%r10, 0x3FF	EA7F80A1
93	0000013c		JMP	crash	D0028038
108	00000140		MOV	%r9, 0x40000000	0900C08000000040
109	00000148		MOV	%r10, 0x60000000	0A00C08000000060
110	00000150		ADD	%r11, %r10, %r9    	4B250044
111	00000154		IFCLEAR	%flags, 2       	4F0080A7
112	00000158		JMP	crash	D0028038
116	0000015c		MOV	%r8,  0xFFFFFFFF    	0800C080FFFFFFFF
117	00000164		MOV	%r9,  0x00000001    	29008080
118	00000168		MOV	%r10, 0x00000001    	2A008080
119	0000016c		MOV	%r11, 0x00000100    	0B208080
121	00000170		ADD	%r6, %r8, %r10    	06290044
122	00000174		ADDC	%r7, %r9, %r11   	272D0045
123	00000178		IFNEQ	%r6, 0	060080A1
124	0000017c		JMP	crash	D0028038
125	00000180		IFNEQ	%r7, 0x102	472080A1
126	00000184		JMP	crash	D0028038
139	00000188		MOV	%r6, 0xAAFFFF55	0600C08055FFFFAA
140	00000190		MOV	%r7, 0x55FFFFAA	0700C080AAFFFF55
141	00000198		LLS	%r10, %r6, 8        	CA20804A
142	0000019c		IFNEQ	%r10, 0xFFFF5500	0A00C0A10055FFFF
143	000001a4		JMP	crash	D0028038
145	000001a8		LRS	%r10, %r6, 8        	CA20804B
146	000001ac		IFNEQ	%r10, 0x00AAFFFF	0A00C0A1FFFFAA00
147	000001b4		JMP	crash	D0028038
149	000001b8		ARS	%r10, %r6, 8        	CA20804C
150	000001bc		IFNEQ	%r10, 0xFFAAFFFF	0A00C0A1FFFFAAFF
151	000001c4		JMP	crash	D0028038
152	000001c8		ARS	%r10, %r7, 8        	EA20804C
153	000001cc		IFNEQ	%r10, 0x0055FFFF	0A00C0A1FFFF5500
154	000001d4		JMP	crash	D0028038
156	000001d8		ROTL	%r10, %r6, 8       	CA20804D
157	000001dc		IFNEQ	%r10, 0xFFFF55AA	0A00C0A1AA55FFFF
158	000001e4		JMP	crash	D0028038
160	000001e8		ROTR	%r10, %r6, 8       	CA20804E
161	000001ec		IFNEQ	%r10, 0x55AAFFFF	0A00C0A1FFFFAA55
162	000001f4		JMP	crash	D0028038
165	000001f8		MOV	%r8, 100	880C8080
166	000001fc		MOV	%r9, 4000000001	0900C08001286BEE
167	00000204		MUL	%r10, %r9, %r8     	2A210050
168	00000208		IFNEQ	%r10, 0x21DBA064	0A00C0A164A0DB21
169	00000210		JMP	crash	D0028038
170	00000214		IFNEQ	%y, 0x5D	AB0B80A1
171	00000218		JMP	crash	D0028038
173	0000021c		DIV	%r10, %r9, %r8     	2A210052
174	00000220		IFNEQ	%r10, 0x02625A00	0A00C0A1005A6202
175	00000228		JMP	crash	D0028038
176	0000022c		IFNEQ	%y, 1	2B0080A1
177	00000230		JMP	crash	D0028038
192	00000234		MOV	%r0, int_A0	80618080
193	00000238		MOV	%r1, vtable	8100A080
194	0000023c		ADD	%r1, %r1, 0x280 	21008A44
195	00000240		STORE	%r1, %r0	200000C4
199	00000244		MOV	%r0, 0xFF0A0000	0000C08000000AFF
200	0000024c		MOV	%r1, 0x07           	E1008080
201	00000250		CALL	clr_screen	3C048039
203	00000254		MOV	%r0, str_basic_tests	608E8080
204	00000258		MOV	%r1, 0xFF0A0000	0100C08000000AFF
205	00000260		MOV	%r2, 0x07	E2008080
206	00000264		CALL	print	4C038039
208	00000268		MOV	%r0, str_ok	008C8080
209	0000026c		MOV	%r1, 0xFF0A0016	0100C08016000AFF
210	00000274		MOV	%r2, 0x0A	42018080
211	00000278		RCALL	print	D000803B
214	0000027c		MOV	%r1, 0	01008080
215	00000280		INT	A0h	A000803C
216	00000284		LRS	%r0, %r1, 10	2028804B
217	00000288		MOV	%r1, 0xFF0A00A0         	0100C080A0000AFF
218	00000290		MOV	%r2, 0x0F	E2018080
219	00000294		CALL	print_hex_w	B8038039
221	00000298		MOV	%r0, str_kib	008D8080
222	0000029c		MOV	%r1, 0xFF0A00AA	0100C080AA000AFF
223	000002a4		MOV	%r2, 0x0F	E2018080
224	000002a8		RCALL	print	A000803B
227	000002ac		MOV	%r10, countervar	0A00A080
228	000002b0	for_ever_loop			
229	000002b0		LOAD.W	%r0, %r10        	400100C1
230	000002b4		ADD	%r1, %r0, 0x1	01048044
231	000002b8		STORE.W	%r10, %r1	410100C5
233	000002bc		MOV	%r1, 0xFF0A0050         	0100C08050000AFF
234	000002c4		MOV	%r2, 0x0E	C2018080
235	000002c8		CALL	print_hex_w	B8038039
238	000002cc		RJMP	for_ever_loop	E0FFFF3A
240	000002d0	crash			
242	000002d0		MOV	%r0, 0xFF0A0000	0000C08000000AFF
243	000002d8		MOV	%r1, 0x07           	E1008080
244	000002dc		CALL	clr_screen	3C048039
246	000002e0		MOV	%r0, str_basic_tests	608E8080
247	000002e4		MOV	%r1, 0xFF0A0000	0100C08000000AFF
248	000002ec		MOV	%r2, 0x07	E2008080
249	000002f0		CALL	print	4C038039
251	000002f4		MOV	%r0, str_fail	608C8080
252	000002f8		MOV	%r1, 0xFF0A0016	0100C08016000AFF
253	00000300		MOV	%r2, 0x0C	82018080
254	00000304		CALL	print	4C038039
256	00000308		SLEEP		00000000
261	0000030c	int_A0			
262	0000030c		PUSH	%r2	0200002A
263	00000310		PUSH	%flags	0F00002A
265	00000314		MOV	%r1, 0x10000	0100A080
266	00000318	loop_int_A0			
267	00000318		ADD	%r1, %r1, 0x20000	2100C04400000200
268	00000320		MOV	%r2, 0xAA55	A24A9580
269	00000324		STORE.W	%r1, %r2	220000C5
270	00000328		LOAD.W	%r0, %r1	200000C1
271	0000032c		IFEQ	%r0, 0xAA55    	A04A95A0
272	00000330		RJMP	loop_int_A0	E4FFFF3A
274	00000334		SUB	%r1, %r1, 0x10000   	2100C04600000100
276	0000033c		POP	%flags	0F000029
277	00000340		POP	%r2	02000029
279	00000344		RFI		05000000
3	00000348		.DD	0xBEBECAFE	FECABEBE
11	0000034c	print			
12	0000034c		LLS	%r2, %r2, 8	4220804A
14	00000350	print_loop			
15	00000350		LOAD.B	%r3, %r0         	030000C2
16	00000354		IFEQ	%r3, 0             	030080A0
17	00000358		RJMP	print_end	1400803A
19	0000035c		OR	%r3, %r3, %r2        	63080041
20	00000360		STORE.W	%r1, %r3	230000C5
22	00000364		ADD	%r1, %r1, 2         	21088044
23	00000368		ADD	%r0, %r0, 1	00048044
24	0000036c		RJMP	print_loop	E0FFFF3A
26	00000370	print_end			
28	00000370		RET		04000000
36	00000374	print_hex_b			
37	00000374		PUSH	%r5	0500002A
39	00000378		LLS	%r2, %r2, 8	4220804A
40	0000037c		LRS	%r5, %r0, 4         	0510804B
41	00000380		AND	%r0, %r0, 0x0000000F      	003C8040
46	00000384		ADD	%r5, %r5, 55	A5DC8044
47	00000388		IFL	%r5, 'A'	250880A2
48	0000038c		SUB	%r5, %r5, 7	A51C8046
50	00000390		OR	%r5, %r5, %r2	A5080041
51	00000394		STORE.W	%r1, %r5	250000C5
54	00000398		ADD	%r1, %r1, 2	21088044
55	0000039c		ADD	%r5, %r0, 55	05DC8044
56	000003a0		IFL	%r5, 'A'	250880A2
57	000003a4		SUB	%r5, %r5, 7	A51C8046
59	000003a8		OR	%r5, %r5, %r2	A5080041
60	000003ac		STORE.W	%r1, %r5	250000C5
62	000003b0		POP	%r5	05000029
64	000003b4		RET		04000000
72	000003b8	print_hex_w			
73	000003b8		PUSH	%r5	0500002A
75	000003bc		LLS	%r2, %r2, 8	4220804A
76	000003c0		LRS	%r5, %r0, 12         	0530804B
81	000003c4		ADD	%r5, %r5, 55	A5DC8044
82	000003c8		IFL	%r5, 'A'	250880A2
83	000003cc		SUB	%r5, %r5, 7	A51C8046
85	000003d0		OR	%r5, %r5, %r2	A5080041
86	000003d4		STORE.W	%r1, %r5	250000C5
89	000003d8		LRS	%r5, %r0, 8	0520804B
90	000003dc		AND	%r5, %r5, 0x0F	A53C8040
92	000003e0		ADD	%r1, %r1, 2	21088044
93	000003e4		ADD	%r5, %r5, 55	A5DC8044
94	000003e8		IFL	%r5, 'A'	250880A2
95	000003ec		SUB	%r5, %r5, 7	A51C8046
97	000003f0		OR	%r5, %r5, %r2	A5080041
98	000003f4		STORE.W	%r1, %r5	250000C5
101	000003f8		LRS	%r5, %r0, 4	0510804B
102	000003fc		AND	%r5, %r5, 0x0F	A53C8040
104	00000400		ADD	%r1, %r1, 2	21088044
105	00000404		ADD	%r5, %r5, 55	A5DC8044
106	00000408		IFL	%r5, 'A'	250880A2
107	0000040c		SUB	%r5, %r5, 7	A51C8046
109	00000410		OR	%r5, %r5, %r2	A5080041
110	00000414		STORE.W	%r1, %r5	250000C5
113	00000418		AND	%r5, %r0, 0x0F	053C8040
115	0000041c		ADD	%r1, %r1, 2	21088044
116	00000420		ADD	%r5, %r5, 55	A5DC8044
117	00000424		IFL	%r5, 'A'	250880A2
118	00000428		SUB	%r5, %r5, 7	A51C8046
120	0000042c		OR	%r5, %r5, %r2	A5080041
121	00000430		STORE.W	%r1, %r5	250000C5
123	00000434		POP	%r5	05000029
125	00000438		RET		04000000
131	0000043c	clr_screen			
132	0000043c		MOV	%r3, 2400 	032C8180
133	00000440		ADD	%r3, %r3, %r0	63000044
135	00000444		LLS	%r1, %r1, 8	2120804A
136	00000448		OR	%r1, %r1, 0x20  	21808041
138	0000044c	clr_screen_loop			
139	0000044c		STORE.W	%r0, %r1	010000C5
140	00000450		ADD	%r0, %r0, 2	00088044
142	00000454		IFLE	%r0, %r3	600000A4
143	00000458		RJMP	clr_screen_loop	F0FFFF3A
145	0000045c		RET		04000000
287	00000460	str_ok	.DB	"OK",0	4F 4B 00
288	00000463	str_fail	.DB	"FAIL",0	46 41 49 4C 00
290	00000468	str_kib	.DB	"KiB of RAM",0	4B 69 42 20 6F 66 20 52 41 4D 00
292	00000473	str_basic_tests	.DB	"BASIC TEST",0	42 41 53 49 43 20 54 45 53 54 00
295	00010000		.ORG	0x10000	
296	00010000	countervar	.DD	0	00000000
298	00010004	vtable			
Symbols:
00010000  countervar
0000030c  int_A0
000000a0  next
0000034c  print
0000043c  clr_screen
00000473  str_basic_tests
00000374  print_hex_b
000000bc  test_alu
00000463  str_fail
00000000  begin
00010004  vtable
00000060  test_ifx
00000350  print_loop
00000318  loop_int_A0
000002b0  for_ever_loop
00000460  str_ok
00000370  print_end
0000044c  clr_screen_loop
00000468  str_kib
000003b8  print_hex_w
000002d0  crash
