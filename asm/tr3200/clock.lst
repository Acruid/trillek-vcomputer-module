2	00100000  	.ORG	100000	
4	00100000  	MOV	%sp,020000	0D00C08000000200
8	00100008  	MOV	%r10,10FF00	0A00C08000FF1000
9	00100010 begin_search_tda		
10	00100010  	ADD	%r10,%r10,100	4A018444
11	00100014  	IFEQ	%r10,112100	0A00C0A000211100
12	0010001c  	JMP	end_search_tda	4C009038
14	00100020  	LOAD.B	%r0,%r10	400100C2
15	00100024  	IFNEQ	%r0,FF	E01F80A1
16	00100028  	JMP	begin_search_tda	10009038
18	0010002c  	ADD	%r1,%r10,1	41058044
19	00100030  	LOAD.B	%r0,%r1	200000C2
20	00100034  	IFNEQ	%r0,0E	C00180A1
21	00100038  	JMP	begin_search_tda	10009038
23	0010003c  	ADD	%r1,%r10,2	41098044
24	00100040  	LOAD.B	%r0,%r1	200000C2
25	00100044  	IFNEQ	%r0,01	200080A1
26	00100048  	JMP	begin_search_tda	10009038
28	0010004c end_search_tda		
29	0010004c  	IFEQ	%r10,112100	0A00C0A000211100
30	00100054  	JMP	crash	A8019038
31	00100058  	STORE	TDA_base_dev,%r10	8A8080C4
33	0010005c  	IFEQ	%r10,FFFFFFFF	0A00C0A0FFFFFFFF
34	00100064  	JMP	crash	A8019038
37	00100068  	ADD	%r0,%r10,0A	40298044
39	0010006c  	MOV	%r1,001000	01008280
40	00100070  	STORE	%r0,%r1	010000C4
42	00100074  	ADD	%r0,%r10,08	40218044
43	00100078  	MOV	%r1,0	01008080
44	0010007c  	STORE.W	%r0,%r1	010000C5
47	00100080  	MOV	%r0,001000	00008280
48	00100084  	MOV	%r1,48	01098080
49	00100088  	CALL	clr_screen	B4029039
54	0010008c  	MOV	%ia,vtable	0E008080
55	00100090  	MOV	%r0,tmr0_isr	0000C08050011000
56	00100098  	MOV	%r1,01	21008080
57	0010009c  	LLS	%r1,%r1,2	2108804A
59	001000a0  	ADD	%r1,%r1,%ia	21380044
60	001000a4  	STORE	%r1,%r0	200000C4
62	001000a8  	MOV	%flags,100	0F208080
65	001000ac  	MOV	%r0,100000	00D4B080
66	001000b0  	STORE	11E004,%r0	0000C0C404E01100
69	001000b8  	MOV	%r0,3	60008080
70	001000bc  	STORE.B	11E010,%r0	0000C0C610E01100
76	001000c4  	MOV	%r0,14	C0018080
77	001000c8  	MOV	%r1,18	41028080
78	001000cc  	CALL	get_offset_from_row_col	B4019039
79	001000d0  	ADD	%r1,%r0,001000	0100C04400100000
80	001000d8  	MOV	%r0,str_dots	0000C080D8021000
81	001000e0  	MOV	%r2,4F	E2098080
82	001000e4  	CALL	print	C4019039
85	001000e8 loop		
90	001000e8  	MOV	%r0,14	C0018080
91	001000ec  	MOV	%r1,22	C1028080
92	001000f0  	CALL	get_offset_from_row_col	B4019039
93	001000f4  	ADD	%r1,%r0,001000	0100C04400100000
96	001000fc  	LOAD.B	%r0,sec	008080C2
97	00100100  	MOV	%r2,48	02098080
98	00100104  	CALL	print_hex_b	EC019039
102	00100108  	MOV	%r0,14	C0018080
103	0010010c  	MOV	%r1,19	61028080
104	00100110  	CALL	get_offset_from_row_col	B4019039
105	00100114  	ADD	%r1,%r0,001000	0100C04400100000
107	0010011c  	LOAD.B	%r0,min	208080C2
108	00100120  	MOV	%r2,48	02098080
109	00100124  	CALL	print_hex_b	EC019039
113	00100128  	MOV	%r0,14	C0018080
114	0010012c  	MOV	%r1,16	01028080
115	00100130  	CALL	get_offset_from_row_col	B4019039
116	00100134  	ADD	%r1,%r0,001000	0100C04400100000
118	0010013c  	LOAD.B	%r0,hour	408080C2
119	00100140  	MOV	%r2,48	02098080
120	00100144  	CALL	print_hex_b	EC019039
122	00100148  	SLEEP		00000000
124	0010014c  	JMP	loop	E8009038
127	00100150 tmr0_isr		
129	00100150  	LOAD.B	%r0,sec	008080C2
130	00100154  	ADD	%r0,%r0,1	00048044
131	00100158  	STORE.B	sec,%r0	008080C6
133	0010015c  	IFL	%r0,60	800780A2
134	00100160  	RFI		00000002
136	00100164  	MOV	%r0,0	00008080
137	00100168  	STORE.B	sec,%r0	008080C6
139	0010016c  	LOAD.B	%r0,min	208080C2
140	00100170  	ADD	%r0,%r0,1	00048044
141	00100174  	STORE.B	min,%r0	208080C6
143	00100178  	IFL	%r0,60	800780A2
144	0010017c  	RFI		00000002
146	00100180  	MOV	%r0,0	00008080
147	00100184  	STORE.B	min,%r0	208080C6
149	00100188  	LOAD.B	%r0,hour	408080C2
150	0010018c  	ADD	%r0,%r0,1	00048044
151	00100190  	STORE.B	hour,%r0	408080C6
153	00100194  	IFL	%r0,24	000380A2
154	00100198  	RFI		00000002
156	0010019c  	MOV	%r0,0	00008080
157	001001a0  	STORE.B	hour,%r0	408080C6
159	001001a4  	RFI		00000002
161	001001a8 crash		
162	001001a8  	SLEEP		00000000
163	001001ac  	JMP	crash	A8019038
5	001001b0  	.DD	BEEFCAFE	FECAEFBE
13	001001b4 get_offset_from_row_col		
16	001001b4  	LLS	%r1,%r1,1	2104804A
18	001001b8  	MUL	%r0,%r0,80	00408150
19	001001bc  	ADD	%r0,%r0,%r1	00040044
21	001001c0  	RET		00000001
29	001001c4 print		
30	001001c4  	LLS	%r2,%r2,8	4220804A
32	001001c8 print_loop		
33	001001c8  	LOAD.B	%r3,%r0	030000C2
34	001001cc  	IFEQ	%r3,0	030080A0
35	001001d0  	RJMP	print_end	1400803A
37	001001d4  	OR	%r3,%r3,%r2	63080041
38	001001d8  	STORE.W	%r1,%r3	230000C5
40	001001dc  	ADD	%r1,%r1,2	21088044
41	001001e0  	ADD	%r0,%r0,1	00048044
42	001001e4  	RJMP	print_loop	E0FFFF3A
44	001001e8 print_end		
46	001001e8  	RET		00000001
54	001001ec print_hex_b		
55	001001ec  	PUSH	%r5	0500002A
57	001001f0  	LLS	%r2,%r2,8	4220804A
58	001001f4  	LRS	%r5,%r0,4	0510804B
59	001001f8  	AND	%r0,%r0,0000000F	003C8040
64	001001fc  	ADD	%r5,%r5,55	A5DC8044
65	00100200  	IFL	%r5,A	250880A2
66	00100204  	SUB	%r5,%r5,7	A51C8046
68	00100208  	OR	%r5,%r5,%r2	A5080041
69	0010020c  	STORE.W	%r1,%r5	250000C5
72	00100210  	ADD	%r1,%r1,2	21088044
73	00100214  	ADD	%r5,%r0,55	05DC8044
74	00100218  	IFL	%r5,A	250880A2
75	0010021c  	SUB	%r5,%r5,7	A51C8046
77	00100220  	OR	%r5,%r5,%r2	A5080041
78	00100224  	STORE.W	%r1,%r5	250000C5
80	00100228  	POP	%r5	05000029
82	0010022c  	RET		00000001
90	00100230 print_hex_w		
91	00100230  	PUSH	%r5	0500002A
93	00100234  	LLS	%r2,%r2,8	4220804A
94	00100238  	LRS	%r5,%r0,12	0530804B
99	0010023c  	ADD	%r5,%r5,55	A5DC8044
100	00100240  	IFL	%r5,A	250880A2
101	00100244  	SUB	%r5,%r5,7	A51C8046
103	00100248  	OR	%r5,%r5,%r2	A5080041
104	0010024c  	STORE.W	%r1,%r5	250000C5
107	00100250  	LRS	%r5,%r0,8	0520804B
108	00100254  	AND	%r5,%r5,0F	A53C8040
110	00100258  	ADD	%r1,%r1,2	21088044
111	0010025c  	ADD	%r5,%r5,55	A5DC8044
112	00100260  	IFL	%r5,A	250880A2
113	00100264  	SUB	%r5,%r5,7	A51C8046
115	00100268  	OR	%r5,%r5,%r2	A5080041
116	0010026c  	STORE.W	%r1,%r5	250000C5
119	00100270  	LRS	%r5,%r0,4	0510804B
120	00100274  	AND	%r5,%r5,0F	A53C8040
122	00100278  	ADD	%r1,%r1,2	21088044
123	0010027c  	ADD	%r5,%r5,55	A5DC8044
124	00100280  	IFL	%r5,A	250880A2
125	00100284  	SUB	%r5,%r5,7	A51C8046
127	00100288  	OR	%r5,%r5,%r2	A5080041
128	0010028c  	STORE.W	%r1,%r5	250000C5
131	00100290  	AND	%r5,%r0,0F	053C8040
133	00100294  	ADD	%r1,%r1,2	21088044
134	00100298  	ADD	%r5,%r5,55	A5DC8044
135	0010029c  	IFL	%r5,A	250880A2
136	001002a0  	SUB	%r5,%r5,7	A51C8046
138	001002a4  	OR	%r5,%r5,%r2	A5080041
139	001002a8  	STORE.W	%r1,%r5	250000C5
141	001002ac  	POP	%r5	05000029
143	001002b0  	RET		00000001
150	001002b4 clr_screen		
151	001002b4  	MOV	%r3,2400	032C8180
152	001002b8  	ADD	%r3,%r3,%r0	63000044
154	001002bc  	LLS	%r1,%r1,8	2120804A
155	001002c0  	OR	%r1,%r1,20	21808041
157	001002c4 clr_screen_loop		
158	001002c4  	STORE.W	%r0,%r1	010000C5
159	001002c8  	ADD	%r0,%r0,2	00088044
161	001002cc  	IFLE	%r0,%r3	600000A4
162	001002d0  	RJMP	clr_screen_loop	F0FFFF3A
164	001002d4  	RET		00000001
169	001002d8 str_dots	.DB	:  :,0	3A 20 20 3A 00
174	00000000  	.ORG	0	
175	00000000 vtable	.DB	0	00
177	00000400  	.ORG	400	
179	00000400 sec	.DB	0	00
180	00000401 min	.DB	0	00
181	00000402 hour	.DW	0	0000
183	00000404 TDA_base_dev	.DW	0	0000
Symbols:
00000402  hour
0010004c  end_search_tda
001001c4  print
001000e8  loop
001002b4  clr_screen
001001ec  print_hex_b
00000000  vtable
001001c8  print_loop
00000401  min
00100010  begin_search_tda
00100150  tmr0_isr
001001e8  print_end
001002c4  clr_screen_loop
00000400  sec
001002d8  str_dots
001001b4  get_offset_from_row_col
00100230  print_hex_w
00000404  TDA_base_dev
001001a8  crash
